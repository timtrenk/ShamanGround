# ──────────────────────────────────────────────────────────────────────────────
# Codex Engine 2.4 — Runtime Configuration
# ──────────────────────────────────────────────────────────────────────────────
# Purpose:
#   Central control file for the Engine 2.4 runtime environment.
#   Defines active environment, file paths, infrastructure, and feature toggles.
#   Designed for modularity — no edits needed in the spec files to switch modes.
# ──────────────────────────────────────────────────────────────────────────────

version: 1
env: staging                  # Options: dev | staging | prod
flow_mode: command            # Modes: command (C+) | resonant (C−)

# ── Path Configuration ────────────────────────────────────────────────────────
# All paths are relative to this runtime.yaml file.
paths:
  engine_spec: ./engine_braid_2.4.yaml
  meta_gate_fields: ./meta-gate-fields.yaml
  harmonizers: ./harmonizers.yaml
  bff: ./braided-feedback-function.yaml
  traps: ./trap_seeds.yaml
  policies: ./policies/thresholds.yaml

# ── Infrastructure Layer ─────────────────────────────────────────────────────
# Database and cache targets. Adjust according to your system setup.
infrastructure:
  redis_url: redis://localhost:6379/2
  db_dsn: postgres://engine:engine_pass@localhost:5432/engine2
  # For lightweight or local testing:
  # db_dsn: sqlite:///engine2.db

# ── Logging ───────────────────────────────────────────────────────────────────
logging:
  level: INFO                 # DEBUG for local dev | INFO for staging | WARN for prod
  json: true                  # Structured JSON logging for easier parsing
  redact_keys: [api_key, password, token]

# ── Feature Flags ─────────────────────────────────────────────────────────────
# Toggle subsystems on/off without modifying code or core specs.
features:
  ephemeris_mode: false           # Keep symbolic 30° lattice — avoid external ephemeris.
  adaptive_cooloff: true          # Automatic cooldown logic on incoherence.
  receipts_api: true              # Expose read-only /receipts endpoint.
  compress_braid_history: true    # Reduce telemetry storage footprint.

# ── Runtime Overrides ────────────────────────────────────────────────────────
# Modify engine policy dynamically at load time (non-destructive overrides).
runtime_overrides:
  meta_gate:
    safety:
      global_cool_off_s: 0               # Rely on on_bff_incoherent guard instead.
      hard_stop_after_total_gates: 6
  optimization:
    damping_rules:
      dominant_share_limit: 0.44
      hysteresis_band: 0.03
    subset_defaults:
      sensitivity: 0.62
      cooldown_s: 12

# ── Telemetry Configuration ──────────────────────────────────────────────────
# Defines what data to capture for learning and audit purposes.
telemetry:
  receipt_fields_keep:
    - session_id
    - timestamp
    - flow_mode
    - center_rotation_deg
    - dominant_pole
    - subsets_fired
    - families_activated
    - traps_triggered
    - order_sequence
    - pantheon_sequence
    - bff_signature
    - braid_quality
    - residual_index
    - duration_ms
    - cost_units
    - order_metrics

  # Lightweight health probe for container or service monitors
  health:
    enabled: true
    path: /health

# ── Notes ─────────────────────────────────────────────────────────────────────
# • 'flow_mode' determines which pole (Meta-Gate or BFF) leads the cycle.
# • The runtime layer acts as the brainstem — the engine spec only executes logic.
# • Typical dev setup: Redis + SQLite. Production: Redis + Postgres.
# • Override file paths or runtime_overrides to customize deployments cleanly.
